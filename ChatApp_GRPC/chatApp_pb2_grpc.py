# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chatApp_pb2 as chatApp__pb2


class ChatAppStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAccount = channel.unary_unary(
                '/grpc.ChatApp/CreateAccount',
                request_serializer=chatApp__pb2.CreateAccountRequest.SerializeToString,
                response_deserializer=chatApp__pb2.CreateAccountResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/grpc.ChatApp/Login',
                request_serializer=chatApp__pb2.LoginRequest.SerializeToString,
                response_deserializer=chatApp__pb2.LoginResponse.FromString,
                )
        self.Logout = channel.unary_unary(
                '/grpc.ChatApp/Logout',
                request_serializer=chatApp__pb2.LogoutRequest.SerializeToString,
                response_deserializer=chatApp__pb2.LogoutResponse.FromString,
                )
        self.ListAccounts = channel.unary_unary(
                '/grpc.ChatApp/ListAccounts',
                request_serializer=chatApp__pb2.ListAccountsRequest.SerializeToString,
                response_deserializer=chatApp__pb2.ListAccountsResponse.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/grpc.ChatApp/SendMessage',
                request_serializer=chatApp__pb2.Message.SerializeToString,
                response_deserializer=chatApp__pb2.SendMessageResponse.FromString,
                )
        self.DeliverMessages = channel.stream_stream(
                '/grpc.ChatApp/DeliverMessages',
                request_serializer=chatApp__pb2.DeliverMessageRequest.SerializeToString,
                response_deserializer=chatApp__pb2.DeliveryMessageResponse.FromString,
                )
        self.DeleteAccount = channel.unary_unary(
                '/grpc.ChatApp/DeleteAccount',
                request_serializer=chatApp__pb2.DeleteAccountRequest.SerializeToString,
                response_deserializer=chatApp__pb2.DeleteAccountResponse.FromString,
                )


class ChatAppServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeliverMessages(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatAppServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=chatApp__pb2.CreateAccountRequest.FromString,
                    response_serializer=chatApp__pb2.CreateAccountResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=chatApp__pb2.LoginRequest.FromString,
                    response_serializer=chatApp__pb2.LoginResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=chatApp__pb2.LogoutRequest.FromString,
                    response_serializer=chatApp__pb2.LogoutResponse.SerializeToString,
            ),
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=chatApp__pb2.ListAccountsRequest.FromString,
                    response_serializer=chatApp__pb2.ListAccountsResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=chatApp__pb2.Message.FromString,
                    response_serializer=chatApp__pb2.SendMessageResponse.SerializeToString,
            ),
            'DeliverMessages': grpc.stream_stream_rpc_method_handler(
                    servicer.DeliverMessages,
                    request_deserializer=chatApp__pb2.DeliverMessageRequest.FromString,
                    response_serializer=chatApp__pb2.DeliveryMessageResponse.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=chatApp__pb2.DeleteAccountRequest.FromString,
                    response_serializer=chatApp__pb2.DeleteAccountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.ChatApp', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatApp(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.ChatApp/CreateAccount',
            chatApp__pb2.CreateAccountRequest.SerializeToString,
            chatApp__pb2.CreateAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.ChatApp/Login',
            chatApp__pb2.LoginRequest.SerializeToString,
            chatApp__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.ChatApp/Logout',
            chatApp__pb2.LogoutRequest.SerializeToString,
            chatApp__pb2.LogoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.ChatApp/ListAccounts',
            chatApp__pb2.ListAccountsRequest.SerializeToString,
            chatApp__pb2.ListAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.ChatApp/SendMessage',
            chatApp__pb2.Message.SerializeToString,
            chatApp__pb2.SendMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeliverMessages(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/grpc.ChatApp/DeliverMessages',
            chatApp__pb2.DeliverMessageRequest.SerializeToString,
            chatApp__pb2.DeliveryMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.ChatApp/DeleteAccount',
            chatApp__pb2.DeleteAccountRequest.SerializeToString,
            chatApp__pb2.DeleteAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
